// Generated by CoffeeScript 1.9.3
(function() {
  var createItem, createRow, getASkeleton, getImageSkeleton, iconclass, icondivSkeleton, imageSkeleton, imageclass, itemsPerRow, liSkeletion, logokind, placeShortcuts, setBG, shortcuts, split, splitShortcuts, transfromIntoPixelSize;

  itemsPerRow = 4;

  logokind = {
    full: 0,
    half: 1,
    square: 2
  };

  shortcuts = [
    {
      name: "mensa",
      url: "http://www.studentenwerk-saarland.de/en/Essen/Essen-in-Saarbrucken/Speiseplan-aktuell",
      bgcolor: "#fff",
      logoid: "studentenwerk",
      logokind: logokind.full
    }, {
      name: "GitHub",
      url: "http://github.com",
      bgcolor: "#fff",
      logoid: "github",
      logokind: logokind.full
    }, {
      name: "amazon",
      url: "http://amazon.de",
      bgcolor: "#fff",
      logoid: "amazon",
      logokind: logokind.full
    }, {
      name: "youtube",
      url: "http://youtube.com",
      bgcolor: "#fff",
      logoid: "youtube",
      logokind: logokind.full
    }
  ];

  setBG = function() {
    var r;
    r = Math.floor((Math.random() * 2) + 1);
    return document.body.style.backgroundImage = "url('../images/wallpapers/wallpaper" + r + ".jpg')";
  };

  split = function(items) {
    var counter, current, currentRow, i, item, j, k, len, numberOfRows, ref, res;
    numberOfRows = items.length / 4;
    res = [];
    for (i = j = 0, ref = itemsPerRow; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
      res[i] = [];
    }
    counter = 0;
    currentRow = 0;
    for (k = 0, len = items.length; k < len; k++) {
      item = items[k];
      res[currentRow].push(item);
      current++;
      if (current >= 4) {
        current = 0;
        currentRow++;
      }
    }
    return res;
  };

  placeShortcuts = function(shortcuts) {
    var j, len, list, results, row;
    list = $("#shortcut-list");
    results = [];
    for (j = 0, len = shortcuts.length; j < len; j++) {
      row = shortcuts[j];
      results.push(list.append(createRow(row)));
    }
    return results;
  };

  createRow = function(row) {
    var item, j, jqueryRow, len;
    jqueryRow = $("<div class='row'></div>");
    for (j = 0, len = row.length; j < len; j++) {
      item = row[j];
      jqueryRow.append(createItem(item));
    }
    return jqueryRow;
  };

  iconclass = "text-center pagination-centered tile";

  imageclass = "logo-";

  liSkeletion = "<li class='col-xs-3'></li>";

  icondivSkeleton = "<div class='" + iconclass + "'></div>";

  imageSkeleton = "<img class='" + imageclass + "' src='../images/logos/'></img>";

  getASkeleton = function(url) {
    return "<a href='" + url + "' class='link-tile'></a>";
  };

  getImageSkeleton = function(name, cssClass) {
    return "<img class='" + cssClass + "' src='../images/logos/" + name + "px.png'></img>";
  };

  transfromIntoPixelSize = function(kind) {
    switch (kind) {
      case 0:
        return "200";
      case 1:
        return "100";
      case 2:
        return "50";
    }
  };

  createItem = function(item) {
    var A, DIV, IMG, LI, bgcolor, imagecssclass, imagename, pixelCount;
    bgcolor = item.bgcolor;
    pixelCount = transfromIntoPixelSize(item.logokind);
    imagename = item.logoid + "-" + pixelCount;
    imagecssclass = imageclass + pixelCount;
    IMG = $(getImageSkeleton(imagename, imagecssclass));
    A = $(getASkeleton(item.url));
    DIV = $(icondivSkeleton);
    LI = $(liSkeletion);
    DIV.css("background-color", item.bgcolor);
    if (item.logobordercolor != null) {
      IMG.css("border", "1px solid " + item.logobordercolor);
    }
    if (item.bordercolor != null) {
      DIV.css("border", "1px solid " + item.bordercolor);
    }
    DIV.append(IMG);
    A.append(DIV);
    LI.append(A);
    return LI;
  };

  setBG();

  splitShortcuts = split(shortcuts);

  placeShortcuts(splitShortcuts);

}).call(this);
